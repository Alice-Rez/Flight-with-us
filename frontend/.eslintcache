[{"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/index.jsx":"1","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/App.jsx":"2","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/context.jsx":"3","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/FormDisplay.jsx":"4","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/Results.jsx":"5","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/FlightCard.jsx":"6","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/Filterbar.jsx":"7"},{"size":227,"mtime":1606922985749,"results":"8","hashOfConfig":"9"},{"size":2828,"mtime":1607023347987,"results":"10","hashOfConfig":"9"},{"size":109,"mtime":1606922985749,"results":"11","hashOfConfig":"9"},{"size":4706,"mtime":1606996536611,"results":"12","hashOfConfig":"9"},{"size":1178,"mtime":1607023554239,"results":"13","hashOfConfig":"9"},{"size":1857,"mtime":1607023476583,"results":"14","hashOfConfig":"9"},{"size":4247,"mtime":1607015875639,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dzjtbv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/index.jsx",[],["33","34"],"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/App.jsx",["35","36"],"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/context.jsx",[],"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/FormDisplay.jsx",["37"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./FormDisplay.css\";\nimport appContext from \"../context\";\nimport {\n  Button,\n  Col,\n  FormControl,\n  InputGroup,\n  Row,\n  Spinner,\n  Form,\n} from \"react-bootstrap\";\nimport \"./FormDisplay.css\";\n\nfunction FormDisplay() {\n  const { search, setSearch, getResults } = useContext(appContext);\n\n  const [cities, setCities] = useState([]);\n\n  const getValue = (e) => {\n    setSearch((prevSearch) => {\n      return { ...prevSearch, [e.target.name]: e.target.value };\n    });\n  };\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      url: \"http://localhost:3500/flights/get/cities\",\n    })\n      .then((res) => {\n        console.log(res.data.cities);\n        setCities(res.data.cities);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      {/* <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner> */}\n      <header className=\"bgHead p-5 container-fluid\">\n        <Row className=\"m-2 p-2 justify-content-md-center\">\n          <Col xs md=\"4\">\n            <Form className=\"mb-3 \">\n              <Form.Group\n                controlId=\"exampleForm.SelectCustom\"\n                className=\"border border-dark\"\n              >\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"departure\"\n                  onChange={getValue}\n                >\n                  <option value=\"\">DEPARTURE</option>\n                  {cities.map((city) => (\n                    <option value={city.cityName} key={`dep-${city.cityName}`}>\n                      {city.cityName.trim().substr(0, 1).toUpperCase() +\n                        city.cityName\n                          .trim()\n                          .substr(1, city.cityName.length - 1)}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md=\"auto\">\n            <h1 className=\"justify-content-center\">&#8826; &#8827;</h1>\n          </Col>\n          <Col xs md=\"4\">\n            <Form className=\"mb-3 \">\n              <Form.Group\n                controlId=\"exampleForm.SelectCustom\"\n                className=\"border border-dark\"\n              >\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"destination\"\n                  onChange={getValue}\n                >\n                  <option value=\"\">DESTINATION</option>\n                  {cities.map((city) => {\n                    if (city.cityName !== search.departure) {\n                      return (\n                        <option\n                          value={city.cityName}\n                          key={`dest-${city.cityName}`}\n                        >\n                          {city.cityName.trim().substr(0, 1).toUpperCase() +\n                            city.cityName\n                              .trim()\n                              .substr(1, city.cityName.length - 1)}\n                        </option>\n                      );\n                    }\n                    return null;\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row className=\"m-2 p-2 justify-content-md-center\">\n          <Col xs sm=\"2\">\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                type=\"date\"\n                placeholder=\"From\"\n                aria-label=\"from wich date\"\n                size=\"sm\"\n                className=\"border border-dark\"\n                name=\"dateFrom\"\n                onChange={getValue}\n              />\n            </InputGroup>\n          </Col>\n          <Col md=\"1\"></Col>\n          <Col xs sm=\"2\">\n            <InputGroup>\n              <FormControl\n                type=\"date\"\n                placeholder=\"to\"\n                aria-label=\"until when\"\n                size=\"sm\"\n                className=\"border border-dark\"\n                name=\"dateTo\"\n                onChange={getValue}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col></Col>\n          <Col md=\"auto\">\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              size=\"md\"\n              variant=\"light\"\n              className=\"border border-dark justify-content-center\"\n              onClick={getResults}\n            >\n              Search\n            </Button>\n          </Col>\n          <Col></Col>\n        </Row>\n      </header>\n    </>\n  );\n}\n\nexport default FormDisplay;\n","/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/Results.jsx",[],"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/FlightCard.jsx",["38","39","40","41"],"/home/dci/Desktop/DCI/projects/Flight-Search/frontend/src/components/Filterbar.jsx",["42","43"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport appContext from \"../context\";\nimport \"./filterbar.css\";\n\nexport default function Filterbar() {\n  const { filter, setFilter } = useContext(appContext);\n  const [stops, setStops] = useState({});\n  const [price, setPrice] = useState({ from: 0, to: 50000 });\n  const [selectedComp, setSelectedComp] = useState([]);\n  const [companies, setCompanies] = useState([]);\n\n  //useEffect for companies -> for the Filter component\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      url: \"http://localhost:3500/flights/get/companies\",\n    })\n      .then((res) => {\n        console.log(res);\n        setCompanies(res.data.companies);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getValueFilter = (e) => {\n    setFilter((prevFilter) => {\n      return { ...prevFilter, [e.target.name]: e.target.value };\n    });\n  };\n  return (\n    <appContext.Provider\n      value={{\n        filter,\n        setFilter,\n      }}\n    >\n      <form className=\"filter-block\">\n        <div>\n          <div className=\"filter\">\n            <h6>Stops</h6>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"noStop\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(0);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"noStop\">\n                Non-stop\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"1Stop\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(1);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"1Stop\">\n                1 stop\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"moreStops\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(2);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"moreStops\">\n                2+ stops\n              </label>\n            </div>\n          </div>\n          <div className=\"filter\">\n            <h6>Price</h6>\n            <div className=\"filter-price\">\n              <div className=\"priceInput\">\n                <label>From </label>\n                <input\n                  type=\"number\"\n                  onInput={(e) => {\n                    e.preventDefault();\n                    setPrice({ ...price, from: +e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"priceInput\">\n                <label>To </label>\n                <input\n                  type=\"number\"\n                  onInput={(e) => {\n                    e.preventDefault();\n                    setPrice({ ...price, to: +e.target.value });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"filter\">\n            <h6>Airlines</h6>\n            {companies.map((companyName, index) => {\n              return (\n                <div className=\"form-check\" key={index}>\n                  <input\n                    className=\"form-check-input\"\n                    id={companyName.companyName}\n                    type=\"checkbox\"\n                    onClick={(e) => {\n                      setSelectedComp([...selectedComp, e.target.id]);\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor={companyName.companyName}\n                  >\n                    {companyName.companyName.substr(0, 1).toUpperCase() +\n                      companyName.companyName.substr(\n                        1,\n                        companyName.companyName.length - 1\n                      )}\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </form>\n    </appContext.Provider>\n  );\n}\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":57,"column":10,"nodeType":"50","messageId":"51","endLine":57,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":73,"column":9,"nodeType":"50","messageId":"51","endLine":73,"endColumn":23},{"ruleId":"48","severity":1,"message":"53","line":11,"column":3,"nodeType":"50","messageId":"51","endLine":11,"endColumn":10},{"ruleId":"48","severity":1,"message":"54","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"55","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":37},{"ruleId":"48","severity":1,"message":"56","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":18},{"ruleId":"48","severity":1,"message":"57","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":11},{"ruleId":"48","severity":1,"message":"58","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":15},{"ruleId":"48","severity":1,"message":"52","line":27,"column":9,"nodeType":"50","messageId":"51","endLine":27,"endColumn":23},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'companies' is assigned a value but never used.","Identifier","unusedVar","'getValueFilter' is assigned a value but never used.","'Spinner' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'appContext' is defined but never used.","'box' is defined but never used.","'stops' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]