[{"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/index.jsx":"1","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/App.jsx":"2","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/context.jsx":"3","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/FormDisplay.jsx":"4","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Results.jsx":"5","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Filterbar.jsx":"6","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/NoResults.jsx":"7","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Pivot.jsx":"8","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/offerCard.jsx":"9","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/FlightCard.jsx":"10","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/LandingPage.jsx":"11","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Article.jsx":"12","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Footer.jsx":"13"},{"size":227,"mtime":1607447182036,"results":"14","hashOfConfig":"15"},{"size":1988,"mtime":1609167589178,"results":"16","hashOfConfig":"15"},{"size":109,"mtime":1607447182036,"results":"17","hashOfConfig":"15"},{"size":5263,"mtime":1609167589182,"results":"18","hashOfConfig":"15"},{"size":2301,"mtime":1609167589182,"results":"19","hashOfConfig":"15"},{"size":5198,"mtime":1609167589178,"results":"20","hashOfConfig":"15"},{"size":379,"mtime":1609167589182,"results":"21","hashOfConfig":"15"},{"size":1836,"mtime":1609167633678,"results":"22","hashOfConfig":"15"},{"size":799,"mtime":1609167702653,"results":"23","hashOfConfig":"15"},{"size":1075,"mtime":1609167589178,"results":"24","hashOfConfig":"15"},{"size":1649,"mtime":1609167589182,"results":"25","hashOfConfig":"15"},{"size":964,"mtime":1609167589178,"results":"26","hashOfConfig":"15"},{"size":322,"mtime":1609167589178,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cufult",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/index.jsx",[],["59","60"],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/App.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/context.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/FormDisplay.jsx",["61","62"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./FormDisplay.css\";\nimport appContext from \"../context\";\nimport {\n  Button,\n  Col,\n  FormControl,\n  InputGroup,\n  Row,\n  Spinner,\n  Form,\n} from \"react-bootstrap\";\nimport \"./FormDisplay.css\";\nimport logo from \"../assets/img/logo.svg\";\n\nfunction FormDisplay() {\n  const { search, setSearch, getResults } = useContext(appContext);\n\n  const [cities, setCities] = useState([]);\n\n  const getValue = (e) => {\n    setSearch((prevSearch) => {\n      return { ...prevSearch, [e.target.name]: e.target.value };\n    });\n  };\n  \n  const compare = ( a, b ) => {\n    if ( a.cityName < b.cityName ){\n      return -1;\n    }\n    if ( a.cityName > b.cityName ){\n      return 1;\n    }\n    return 0;\n  }\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      url: \"http://localhost:3500/flights/get/cities\",\n    })\n      .then((res) => {\n        let citiesSorted = res.data.cities.sort(function (a, b) {\n          var keyA = a.cityName.trim();\n          var keyB = b.cityName.trim();\n          if (keyA < keyB) return -1;\n          if (keyA > keyB) return 1;\n          return 0;\n        });\n        console.log(citiesSorted);\n        setCities(citiesSorted);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      {/* <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner> */}\n      <header className=\"bgHead p-5 container-fluid\">\n        <h1 className=\"mb-5\">\n          Fly with us <img src={logo} alt=\"\" />\n        </h1>\n        <div className=\"test\">\n        <Row className=\"m-2 p-2 justify-content-md-center\">\n          <Col xs md=\"4\">\n            <Form className=\"mb-3 \">\n              <Form.Group\n                controlId=\"exampleForm.SelectCustom\"\n                className=\"border border-dark\"\n              >\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"departure\"\n                  onChange={getValue}\n                >\n                  <option value=\"\">DEPARTURE</option>\n                  {cities.map((city) => (\n                    <option value={city.cityId} key={`dep-${city.cityName}`}>\n                      {city.cityName.trim().substr(0, 1).toUpperCase() +\n                        city.cityName\n                          .trim()\n                          .substr(1, city.cityName.length - 1)}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md=\"auto\">\n            <p className=\"justify-content-center\">&#8826; &#8827;</p>\n          </Col>\n          <Col xs md=\"4\">\n            <Form className=\"mb-3 \">\n              <Form.Group\n                controlId=\"exampleForm.SelectCustom\"\n                className=\"border border-dark\"\n              >\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"destination\"\n                  onChange={getValue}\n                >\n                  <option value=\"\">DESTINATION</option>\n                  {cities.map((city) => {\n                    if (city.cityId !== +search.departure) {\n                      return (\n                        <option\n                          value={city.cityId}\n                          key={`dest-${city.cityName}`}\n                        >\n                          {city.cityName.trim().substr(0, 1).toUpperCase() +\n                            city.cityName\n                              .trim()\n                              .substr(1, city.cityName.length - 1)}\n                        </option>\n                      );\n                    }\n                    return null;\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row className=\"m-2 p-2 justify-content-md-center\">\n          <Col xs sm=\"2\">\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                type=\"date\"\n                placeholder=\"From\"\n                aria-label=\"from wich date\"\n                size=\"sm\"\n                className=\"border border-dark\"\n                name=\"dateFrom\"\n                onChange={getValue}\n              />\n            </InputGroup>\n          </Col>\n          <Col md=\"1\"></Col>\n          <Col xs sm=\"2\">\n            <InputGroup>\n              <FormControl\n                type=\"date\"\n                placeholder=\"to\"\n                aria-label=\"until when\"\n                size=\"sm\"\n                className=\"border border-dark\"\n                name=\"dateTo\"\n                onChange={getValue}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Button\n            type=\"submit\"\n            value=\"Submit\"\n            size=\"md\"\n            className=\"justify-content-center\"\n            onClick={getResults}\n          >\n            Search\n          </Button>\n        </Row>\n        </div>\n      </header>\n    </>\n  );\n}\n\nexport default FormDisplay;\n","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Results.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Filterbar.jsx",["63","64","65"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport appContext from \"../context\";\nimport \"./filterbar.css\";\n\nexport default function Filterbar() {\n  const { filter, setFilter } = useContext(appContext);\n  const [stops, setStops] = useState({});\n  const [price, setPrice] = useState({ from: 0, to: 50000 });\n  const [selectedComp, setSelectedComp] = useState([]);\n  const [companies, setCompanies] = useState([]);\n\n  //useEffect for companies -> for the Filter component\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      url: \"http://localhost:3500/flights/get/companies\",\n    })\n      .then((res) => {\n        let companiesSorted = res.data.companies.sort(function (a, b) {\n          var keyA = a.companyName.trim();\n          var keyB = b.companyName.trim();\n          if (keyA < keyB) return -1;\n          if (keyA > keyB) return 1;\n          return 0;\n        });\n        console.log(companiesSorted);\n        setCompanies(companiesSorted);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getValueFilter = (e) => {\n    setFilter((prevFilter) => {\n      return { ...prevFilter, [e.target.name]: e.target.value };\n    });\n  };\n  return (\n    <form>\n      <div className=\"filter-block\">\n        {/* STOPS */}\n        <div className=\"filter filter-stops\">\n          <h6>Stops</h6>\n          <div className=\"list-stops\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"noStop\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(0);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"noStop\">\n                Non-stop\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"1Stop\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(1);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"1Stop\">\n                1 stop\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"moreStops\"\n                type=\"checkbox\"\n                onClick={() => {\n                  setStops(2);\n                }}\n              />\n              <label className=\"form-check-label\" htmlFor=\"moreStops\">\n                2+ stops\n              </label>\n            </div>\n          </div>\n        </div>\n        {/* PRICE */}\n        <div className=\"filter filter-price\">\n          <h6>Price</h6>\n          <div className=\"price-range\">\n            <div className=\"priceInput\">\n              <label>From </label>\n\n              <input\n                type=\"number\"\n                onInput={(e) => {\n                  e.preventDefault();\n                  setPrice({ ...price, from: +e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"priceInput\">\n              <label>To </label>\n              <input\n                type=\"number\"\n                onInput={(e) => {\n                  e.preventDefault();\n                  setPrice({ ...price, to: +e.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        {/* COMPANIES */}\n        <div className=\"filter filter-companies\">\n          <h6>Airlines</h6>\n          <div className=\"list-companies\">\n            {companies.map((companyName, index) => {\n              return (\n                <div key={index}>\n\n\n                  <input\n                    className=\"form-check-input\"\n                    id={companyName.companyName}\n                    type=\"checkbox\"\n                    onClick={(e) => {\n                      setSelectedComp([...selectedComp, e.target.id]);\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor={companyName.companyName}\n                  >\n                    {companyName.companyName.substr(0, 1).toUpperCase() +\n                      companyName.companyName.substr(\n                        1,\n                        companyName.companyName.length - 1\n                      )}\n                  </label>\n                </div>\n\n\n\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/NoResults.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Pivot.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/offerCard.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/FlightCard.jsx",["66","67"],"import React, { useState, useContext } from \"react\";\nimport { IoAirplaneSharp } from \"react-icons/io5\";\nimport \"./FlightCard.css\";\n\nexport default function FlightCard(props) {\n  const flight = props.flight;\n\n  return (\n    <div className=\"result\">\n      <img id=\"company-logo\" src={flight.companyLogo} alt=\"logo\" style={{ width: \"6rem\" }}></img>\n      <div className=\"flight-info1\">\n        <h3>{flight.hourOfStart.slice(0,5)}</h3>\n        <p>{flight.departure}</p>\n      </div>\n      <div className=\"extra\">\n        <p>\n          {flight.duration.split(\":\")[0]}h{\" \"}\n          {flight.duration.split(\":\")[1].substr(0, 2)} m{\" \"}\n        </p>\n        <span id=\"airplane\">\n          <IoAirplaneSharp />\n        </span>\n      </div>\n\n      <div className=\"flight-info2\">\n        <h3>{flight.hourOfLanding.slice(0,5)}</h3>\n        <p>{flight.destination}</p>\n      </div>\n\n        <button>{flight.price}€</button>\n    </div>\n  );\n}\n","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/LandingPage.jsx",[],"/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Article.jsx",["68"],"import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./Article.css\";\nimport covid from \"../assets/img/covid.png\";\nimport requirement from \"../assets/img/requirements.jpg\";\nimport about from \"../assets/img/about.png\";\nimport terms from \"../assets/img/terms.jpg\";\n\nexport default function Article(props) {\n  const { article } = props;\n  let picture;\n\n  const choosePicture = (image) => {\n    switch (image) {\n      case \"covid\":\n        picture = covid;\n        break;\n      case \"requirements\":\n        picture = requirement;\n        break;\n      case \"about\":\n        picture = about;\n        break;\n      default:\n        picture = terms;\n    }\n  };\n\n  choosePicture(article.class);\n\n  return (\n    <article\n      className={`basic, ${article.class}`}\n      style={{ backgroundImage: `url(${picture})` }}\n    >\n      <h3>{article.title}</h3>\n      <p>{article.text}</p>\n      <button className=\"btn\">Learn more</button>\n    </article>\n  );\n}\n","/home/dci/UIBasics/dbs/flights/Flight-Search/frontend/src/components/Footer.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":10},{"ruleId":"73","severity":1,"message":"77","line":28,"column":9,"nodeType":"75","messageId":"76","endLine":28,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":7,"column":11,"nodeType":"75","messageId":"76","endLine":7,"endColumn":17},{"ruleId":"73","severity":1,"message":"79","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":15},{"ruleId":"73","severity":1,"message":"80","line":34,"column":9,"nodeType":"75","messageId":"76","endLine":34,"endColumn":23},{"ruleId":"73","severity":1,"message":"81","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":37},{"ruleId":"73","severity":1,"message":"83","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'compare' is assigned a value but never used.","'filter' is assigned a value but never used.","'stops' is assigned a value but never used.","'getValueFilter' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]